{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/commonservice.service.ts","./src/app/country-list/country-list.component.ts","./src/app/country-list/country-list.component.html","./src/app/dash-board/dash-board.component.ts","./src/app/dash-board/dash-board.component.html","./src/app/deathcount/deathcount.component.ts","./src/app/deathcount/deathcount.component.html","./src/app/line-chart/line-chart.component.ts","./src/app/line-chart/line-chart.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/mapview/mapview.component.ts","./src/app/mapview/mapview.component.html","./src/app/recovercount/recovercount.component.ts","./src/app/recovercount/recovercount.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACG;AACgB;AACxB;AACU;;;AAEzD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mFAAkB,EAAC;IACzC,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,mFAAkB,EAAC;IAClD,EAAC,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,2DAAY,EAAC;CACpC,CAAC;AAMI,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAwD;;;;AAUjD,MAAM,YAAY;IAGvB,YAAmB,OAA6B,EAAU,KAAa;QAApD,YAAO,GAAP,OAAO,CAAsB;QAAU,UAAK,GAAL,KAAK,CAAQ;QAFvE,UAAK,GAAG,gBAAgB,CAAC;IAGzB,CAAC;;wEAJU,YAAY;4FAAZ,YAAY;QCVzB,2EAA+B;;6FDUlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACyB;AACtC;AAEW;AACT;AACwB;AAET;AACe;AACrB;AACgB;AACM;AACnB;AACY;AACd;;;AA4BlD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAZJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,yEAAkB;YAClB,0DAAW;YACX,yEAAkB,CAAC,OAAO,CAAC,EAAE,UAAU,EAAE,yCAAyC,EAAE,CAAC;SACtF;mIAQU,SAAS,mBAxBlB,2DAAY;QACZ,mFAAkB;QAClB,yFAAoB;QACpB,2EAAgB;QAChB,oFAAmB;QACnB,2FAAqB;QACrB,oFAAkB;QAClB,sEAAc,aAGd,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,yEAAkB;QAClB,0DAAW;6FAUF,SAAS;cA1BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,mFAAkB;oBAClB,yFAAoB;oBACpB,2EAAgB;oBAChB,oFAAmB;oBACnB,2FAAqB;oBACrB,oFAAkB;oBAClB,sEAAc;iBACf;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,yEAAkB;oBAClB,0DAAW;oBACX,yEAAkB,CAAC,OAAO,CAAC,EAAE,UAAU,EAAE,yCAAyC,EAAE,CAAC;iBACtF;gBACD,OAAO,EAAE;oBACP,oEAAsB;oBACtB,8DAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC1CD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEZ;AACoB;;;AAEnD,IAAI,MAAM,GAAG,IAAI,gEAAW,EAAE,CAAC;AAC/B,MAAM,CAAC,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;AAKxC,MAAM,oBAAoB;IAU/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QARpC,kBAAa,GAAG,KAAK,CAAC;QAEtB,aAAQ,GAAG,KAAK,CAAC;QAEjB,kBAAa,GAAoB,IAAI,4CAAO,EAAE,CAAC;QAE/C,oBAAe,GAAoB,IAAI,4CAAO,EAAE,CAAC;QAG/C,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClC,sBAAsB;QACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4CAA4C,GAAE,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1F,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;YAClC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IAEL,CAAC;IAID,UAAU,CAAC,QAAQ,EAAE,QAAQ;QAC3B,IAAG,QAAQ,KAAK,QAAQ,EAAE;YACxB,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,eAAe,CAAC,SAAS,EAAE,QAAQ;QACjC,IAAG,CAAC,QAAQ,EAAE;YACZ,OAAO,SAAS,CAAC;SAClB;aAAM;YACL,OAAO,SAAS,GAAC,OAAO,CAAC;SAC1B;IACH,CAAC;IAED,WAAW,CAAC,IAAI;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0CAA0C,GAAE,IAAI,CAAC,CAAC;IACzE,CAAC;IACD,gBAAgB,CAAC,IAAI;QAChB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0CAA0C,GAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IAEL,CAAC;;wFAlDU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;6FAEP,oBAAoB;cAHhC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;ICMjD,qEACE;IAAA,yEACA;IAAA,yEACE;IAAA,uDACF;IAAA,4DAAM;IACN,yEACE;IAAA,oEAAG;IAAA,uDAAwB;IAAA,4DAAI;IACjC,4DAAM;IACR,4DAAM;IACN,4DAAK;;;IAND,0DACF;IADE,2FACF;IAEK,0DAAwB;IAAxB,uFAAwB;;ADHhC,MAAM,oBAAoB;IAE/B,YAAmB,OAA6B;QAA7B,YAAO,GAAP,OAAO,CAAsB;QAKhD;;WAEG;QACH,cAAS,GAAE,WAAW,CAAC;QACvB,cAAS,GAAE,WAAW,CAAC;QACvB,WAAM,GAAG,QAAQ,CAAC;IAVkC,CAAC;IAkBrD,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1C,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO;gBACZ,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC;QACtD,CAAC,CAAC;IACJ,CAAC;;wFA7BU,oBAAoB;oGAApB,oBAAoB;QCTjC,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,2EAAgB;QAAA,4DAAK;QACzB,qEAAI;QAAA,oEAAG;QAAA,uDAAkB;QAAA,4DAAI;QAAA,4DAAK;QACtC,4DAAM;QACN,yEACQ;QAAA,8GACE;QASV,4DAAM;QACN,4DAAM;;QAjBD,6HAAwD;QACtD,0DAAwD;QAAxD,6HAAwD;QAEpD,0DAAkB;QAAlB,mFAAkB;QAExB,0DAAqD;QAArD,0HAAqD;QAC9C,0DAA4B;QAA5B,gFAA4B;;6FDG3B,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;kBAkBE,mDAAK;;;;;;;;;;;;;;AE1BR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqE;;;;;;;;;;AAU9D,MAAM,kBAAkB;IAE7B,YAAoB,KAAwB,EAC3B,OAA6B,EAC7B,KAAa;QAFV,UAAK,GAAL,KAAK,CAAmB;QAC3B,YAAO,GAAP,OAAO,CAAsB;QAC7B,UAAK,GAAL,KAAK,CAAQ;QAK9B,SAAI,GAAE,MAAM,CAAC;QACb,aAAQ,GAAC,UAAU,CAAC;QACpB,mBAAc,GAAG,gBAAgB,CAAC;QAClC,sBAAiB,GAAG,mBAAmB,CAAC;QACxC,uBAAkB,GAAE,oBAAoB,CAAC;QACzC,aAAQ,GAAG,KAAK,CAAC;IAViB,CAAC;IAGnC,QAAQ;IACR,CAAC;IAOD,MAAM;QACF,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACnC,CAAC;IAEC,QAAQ;QACN,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO,YAAY,CAAC;SACrB;aAAM;YACL,OAAO,WAAW,CAAC;SACpB;IACH,CAAC;;oFAzBQ,kBAAkB;kGAAlB,kBAAkB;QCT/B,0EACA;QAAA,uEACA;QAAA,qEACI;QAAA,qEACA;QAAA,qEACA;QAGJ,4DAAO;QACP,0EACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEACI;QAAA,yEACI;QAAA,4EACA;QADoD,0IAAS,YAAQ,IAAC;QAAtE,4DACA;QAAA,4EAAyD;QAAA,sEAAU;QAAA,4DAAQ;QAC7E,4DAAM;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,mFAA2D;QAC/D,4DAAM;QACN,2EACI;QAAA,8EAAiD;QACrD,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,2EACG;QAAA,iFAAuD;QAC1D,4DAAM;QACN,2EACI;QAAA,mFAA2D;QAC/D,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,iFAAuD;QAC3D,4DAAM;QACV,4DAAM;QACR,4DAAM;QACZ,4DAAM;QACL,2EACG;QAAA,qEAA6B;QACjC,4DAAM;QACV,4DAAO;QACP,4DAAO;;QAtCD,0DAAoD;QAApD,wHAAoD;QAcxB,2DAAqB;QAArB,kFAAqB;QAG1B,0DAAqB;QAArB,kFAAqB;QAEhB,0DAAkE;QAAlE,sIAAkE;QAEzD,0DAA8D;QAA9D,kIAA8D;QAClE,0DAAqB;QAArB,kFAAqB;QAElB,0DAAiE;QAAjE,qIAAiE;QACjE,0DAAqB;QAArB,kFAAqB;QAI3B,0DAAqB;QAArB,kFAAqB;;6FD7B5C,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;ICMjD,qEACI;IAAA,yEACI;IAAA,yEACI;IAAA,uDACJ;IAAA,4DAAM;IACN,yEACE;IAAA,oEAAG;IAAA,uDAAqB;IAAA,4DAAI;IAC9B,4DAAM;IACV,4DAAM;IACV,4DAAK;;;IANO,0DACJ;IADI,2FACJ;IAEK,0DAAqB;IAArB,oFAAqB;;ADJnC,MAAM,mBAAmB;IAE9B,YAAmB,OAA6B;QAA7B,YAAO,GAAP,OAAO,CAAsB;QAMhD;;WAEG;QACH,cAAS,GAAE,WAAW,CAAC;QACvB,cAAS,GAAE,WAAW,CAAC;QACvB,WAAM,GAAG,QAAQ,CAAC;IAXkC,CAAC;IAgBrD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9G,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;;sFAvBU,mBAAmB;mGAAnB,mBAAmB;QCRhC,yEACA;QAAA,yEACI;QAAA,wEAAe;QAAA,uEAAY;QAAA,4DAAK;QAChC,qEAAI;QAAA,oEAAG;QAAA,uDAAc;QAAA,4DAAI;QAAA,4DAAK;QAClC,4DAAM;QACN,yEACQ;QAAA,6GACI;QASZ,4DAAM;QACN,4DAAM;;QAjBD,6HAAwD;QACxD,0DAAwD;QAAxD,6HAAwD;QAElD,0DAAc;QAAd,+EAAc;QAEpB,0DAAqD;QAArD,0HAAqD;QAC9C,0DAA4B;QAA5B,gFAA4B;;6FDE3B,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;kBAgBE,mDAAK;;;;;;;;;;;;;;AEvBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4E;;;;;;;ICM5D,4EAAgE;IAAA,uDAAW;IAAA,4DAAS;;;IAAxC,+EAAmB;IAAC,0DAAW;IAAX,2EAAW;;;IAO3E,4EAA6D;IAAA,uDAAU;IAAA,4DAAS;;;IAAtC,8EAAkB;IAAC,0DAAU;IAAV,0EAAU;;;IAKvF,yEACA;IAAA,8EAQe;IACf,4DAAM;;;IARH,0DAAe;IAAf,+EAAe;;;IASlB,0EACI;IAAA,8EAQe;IACf,4DAAM;;;IARH,0DAAe;IAAf,+EAAe;;;ADtBf,MAAM,kBAAkB;IAuC7B,YAAoB,OAA6B,EAAU,GAAsB;QAA7D,YAAO,GAAP,OAAO,CAAsB;QAAU,QAAG,GAAH,GAAG,CAAmB;QAjCjF;;WAEG;QACH,cAAS,GAAE,WAAW,CAAC;QAEvB,UAAK,GAAG,6BAA6B,CAAC;QACtC,SAAI,GAAG,WAAW,CAAC;QAEnB,iBAAY,GAAG;YAEb,eAAe,EAAE,SAAS;YACzB,KAAK,EAAE;gBACN,SAAS,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC;aAC3B;YACD,KAAK,EAAC;gBACH,KAAK,EAAE,cAAc;gBACrB,cAAc,EAAE;oBACd,KAAK,EAAE,OAAO;iBACf;gBACD,SAAS,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC;aAC7B;YACD,MAAM,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAC,EAAC;SACvE;QACD,YAAO,GAAG;YACR,eAAe,EAAE,OAAO;YACvB,KAAK,EAAC;gBACH,KAAK,EAAE,cAAc;aACvB;YACD,MAAM,EAAE,EAAC,SAAS,EAAE,EAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAC,EAAC;SACrD,CAAC;QACF,UAAK,GAAG,GAAG,CAAC;QACZ,WAAM,GAAG,GAAG,CAAC;QAOb,kBAAa,GAAG,EAAE,CAAC;QACnB,eAAU,GAAG,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;QAClD,eAAU,GAAG,QAAQ,CAAC;QACtB,iBAAY,GAAG,EAAE,CAAC;IARmE,CAAC;IAStF,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC,CAAC;QACxF,CAAC,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5C,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,WAAW,GAAG,EAAE,CAAC;gBACnB,IAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAG,IAAI,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;oBAC5F,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC5B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;oBAC3C,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;oBACpC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAChC;YACL,CAAC,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QACjC,CAAC,CAAC;IACN,CAAC;IACD,UAAU,CAAC,CAAC;QACV,IAAI,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAC5D,IAAG,CAAC,CAAC,SAAS,CAAC,KAAI,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE;gBACjC,OAAO,CAAC,CAAC,MAAM,CAAC;aAAE;QAAA,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,YAAY,CAAC,CAAC;QACV,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACxC,CAAC,CAAC;IACN,CAAC;;oFArFY,kBAAkB;kGAAlB,kBAAkB;QCT/B,yEAEA;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,4EACI;QAD0B,kJAAU,sBAAkB,IAAC;QACvD,oHAAgE;QACnE,4DAAS;QACZ,4DAAM;QACZ,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,4EACI;QAD0B,kJAAU,wBAAoB,IAAC;QACzD,oHAA6D;QAChE,4DAAS;QACZ,4DAAM;QACZ,4DAAM;QACV,4DAAM;QACN,gHACA;QAUA,gHACI;QAUJ,4DAAM;;QAxCD,uKACuB;QAKJ,0DAAmC;QAAnC,oFAAmC;QAOnC,0DAAiC;QAAjC,mFAAiC;QAKlC,0DAAiB;QAAjB,+EAAiB;QAWjB,0DAAgB;QAAhB,8EAAgB;;6FDpB1B,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;kBAIE,mDAAK;;;;;;;;;;;;;;AEZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICW5C,uEAA2B;IAAA,+EAAmB;IAAA,4DAAO;;;;IAX3D,yEACI;IAAA,qEAAI;IAAA,gFAAqB;IAAA,4DAAK;IAC9B,yEACE;IAAA,uEAAM;IAAA,qEAAU;IAAA,4DAAO;IACvB,2EACF;IADsB,6UAAsB;IAA1C,4DACF;IAAA,4DAAM;IACN,yEACE;IAAA,uEAAM;IAAA,qEAAU;IAAA,4DAAO;IACvB,4EACF;IADyB,8UAAsB;IAA7C,4DACF;IAAA,4DAAM;IACN,0EACE;IAAA,oHAA2B;IAC7B,4DAAM;IACN,6EAA+C;IAAvC,kVAAsC;IAAC,kEAAM;IAAA,4DAAS;IAChE,4DAAM;;;IAVkB,0DAAsB;IAAtB,oFAAsB;IAInB,0DAAsB;IAAtB,oFAAsB;IAGvC,0DAAmB;IAAnB,oFAAmB;;ADFxB,MAAM,cAAc;IAEzB,YAAmB,OAA6B,EAAU,KAAa;QAApD,YAAO,GAAP,OAAO,CAAsB;QAAU,UAAK,GAAL,KAAK,CAAQ;QAGvE,aAAQ,GAAW,EAAE,CAAC;QACtB,aAAQ,GAAW,EAAE,CAAC;QACtB,SAAI,GAAY,KAAK,CAAC;QACtB,gBAAW,GAAG,KAAK,CAAC;IAJpB,CAAC;IAQD,QAAQ;IAER,CAAC;IAED,QAAQ,CAAC,IAAI,EAAC,QAAQ;QAClB,IAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YAClF,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;SACrC;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3B;IAEL,CAAC;;4EAzBU,cAAc;8FAAd,cAAc;QCT3B,2GACI;;QADmB,uFAAyB;;6FDSnC,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4E;;;;;;ICa5E,yEACA;IAAA,iFAEe;IACf,4DAAM;;;IAHgB,0DAAe;IAAf,+EAAe;;;IAIrC,yEACE;IAAA,iFAEe;IACf,4DAAM;;;IAHgB,0DAAe;IAAf,+EAAe;;ADXhC,MAAM,gBAAgB;IAE3B,YAAoB,OAA6B,EAAU,cAAiC;QAAxE,YAAO,GAAP,OAAO,CAAsB;QAAU,mBAAc,GAAd,cAAc,CAAmB;QAC5F,UAAK,GAAG,EAAE,CAAC;QACX,SAAI,GAAG,UAAU,CAAC;QAGX,iBAAY,GAAG,EAAE,CAAC;QAClB,kBAAa,GAAG,EAAE,CAAC;QAM3B,gBAAW,GAAG,CAAC,UAAU,EAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QAC/C,iBAAY,GAAG;YACd,eAAe,EAAG,SAAS;YAC3B,OAAO,EAAE,IAAI;YACb,MAAM,EAAC,KAAK;YACZ,MAAM,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAC,EAAC;SACvE,CAAC;QACA,YAAO,GAAG;YACN,eAAe,EAAC,OAAO;YACvB,OAAO,EAAE,IAAI;YACb,MAAM,EAAC,KAAK;YACZ,MAAM,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAC,EAAC;SACzE,CAAC;QACF,UAAK,GAAG,GAAG,CAAC;QACZ,WAAM,GAAG,GAAG,CAAC;IA1BmF,CAAC;IA4BjG,QAAQ;QACN,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,SAAS,CAAC;SAC1C;QACD,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC,CAAC;YACnF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAEhD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC9B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;oBAC/C,IAAI,WAAW,GAAG,EAAE,CAAC;oBACnB,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBACvC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBACvC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;oBAC7C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC;oBACnC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,CAAC,CAAC;YACN,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAGD,YAAY,CAAC,MAAM;QACjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACvC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACvC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC;QACrC,CAAC,CAAC;IACN,CAAC;;gFAhEU,gBAAgB;gGAAhB,gBAAgB;QCR7B,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEAAoB;QAAA,4EAA0E;QAArC,wIAAS,iBAAa,WAAW,CAAC,IAAC;QAAE,gEAAK;QAAA,4DAAS;QAAA,4DAAM;QACpH,4DAAM;QACN,yEACE;QAAA,yEAAmB;QAAA,4EAA0E;QAApC,wIAAS,iBAAa,WAAW,CAAC,IAAC;QAAC,oEAAS;QAAA,4DAAS;QAAA,4DAAM;QACvH,4DAAM;QACN,0EACE;QAAA,0EAAmB;QAAA,6EAAyD;QAAjC,yIAAS,iBAAa,QAAQ,CAAC,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAAA,4DAAM;QACnG,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,8GACA;QAIA,8GACE;;QANoB,2DAAiB;QAAjB,+EAAiB;QAKlB,0DAAiB;QAAjB,8EAAiB;;6FDVzB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;kBAYE,mDAAK;;;;;;;;;;;;;;AEnBR;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;ICMjD,qEACI;IAAA,yEACI;IAAA,yEACI;IAAA,uDACJ;IAAA,4DAAM;IACN,yEACE;IAAA,oEAAG;IAAA,uDAAwB;IAAA,4DAAI;IACjC,4DAAM;IACV,4DAAM;IACV,4DAAK;;;IANO,0DACJ;IADI,2FACJ;IAEK,0DAAwB;IAAxB,uFAAwB;;ADJtC,MAAM,qBAAqB;IAEhC,YAAmB,OAA6B;QAA7B,YAAO,GAAP,OAAO,CAAsB;QAKhD;;WAEG;QACH,cAAS,GAAE,WAAW,CAAC;QACvB,cAAS,GAAE,WAAW,CAAC;QACvB,WAAM,GAAG,QAAQ,CAAC;IAVkC,CAAC;IAcrD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;;0FArBU,qBAAqB;qGAArB,qBAAqB;QCRlC,yEACA;QAAA,yEACI;QAAA,wEAAe;QAAA,0EAAe;QAAA,4DAAK;QACnC,qEAAI;QAAA,oEAAG;QAAA,uDAAiB;QAAA,4DAAI;QAAA,4DAAK;QACrC,4DAAM;QACN,yEACQ;QAAA,+GACI;QASZ,4DAAM;QACN,4DAAM;;QAjBD,6HAAwD;QACxD,0DAAwD;QAAxD,6HAAwD;QAElD,0DAAiB;QAAjB,kFAAiB;QAEvB,0DAAqD;QAArD,0HAAqD;QAC9C,0DAA4B;QAA5B,gFAA4B;;6FDE3B,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;kBAKE,mDAAK;;;;;;;;;;;;;;AEZR;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashBoardComponent } from './dash-board/dash-board.component';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {path: \"\", component: DashBoardComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'dashboard', component: DashBoardComponent},\n  {path: '*', component: AppComponent},\n ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, HostListener } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonserviceService } from './commonservice.service';\nimport { RouterModule, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Covid19 Status';\n\n  constructor(public service: CommonserviceService, private route: Router){\n  }\n \n}\n","<router-outlet></router-outlet> ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA,CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashBoardComponent } from './dash-board/dash-board.component';\nimport { RouterModule } from '@angular/router';\nimport { MapviewComponent } from './mapview/mapview.component'\nimport { CountryListComponent } from './country-list/country-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DeathcountComponent } from './deathcount/deathcount.component';\nimport { RecovercountComponent } from './recovercount/recovercount.component';\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { LineChartComponent } from './line-chart/line-chart.component';\nimport { LoginComponent } from './login/login.component';\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    DashBoardComponent,\n    CountryListComponent,\n    MapviewComponent,\n    DeathcountComponent,\n    RecovercountComponent,\n    LineChartComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GoogleChartsModule,\n    FormsModule,\n    GoogleChartsModule.forRoot({ mapsApiKey: 'AIzaSyD-9tSrke72PouQMnMX-a7eZSW0jkFMBWY' })\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\n\nlet header = new HttpHeaders();\nheader.set('Access-Control-Allow-Origin', '*');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonserviceService {\n\n  ChangeCountry = false;\n\n  loggedIn = false;\n  \n  staticsReport: Subject<Object> = new Subject();\n\n  lineChartReport: Subject<Object> = new Subject();\n\n  constructor(private http: HttpClient) {\n    console.log(\"inside the service\");\n    // if(this.loggedIn) {\n      this.http.get('https://api.covid19api.com/summary').subscribe(data => {\n        this.staticsReport.next(data);\n    });\n    \n    this.http.get('https://api.covid19api.com/dayone/country/'+ \"afghanistan\").subscribe(data => {\n      console.log(\"data vvalue updated\")\n      this.lineChartReport.next(data);\n    });\n    \n  }\n\n\n  countryList;\n  checkLogin(username, password) {\n    if(username === password) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  toggleNightMode(className, darkMode) {\n    if(!darkMode) {\n      return className;\n    } else {\n      return className+'-dark';\n    }\n  }\n\n  getMapvalue(slug) {\n    return this.http.get('https://api.covid19api.com/live/country/'+ slug);\n  }\n  getWorldWideInfo(slug) {\n       this.http.get('https://api.covid19api.com/live/country/'+slug).subscribe(data => {\n       this.lineChartReport.next(data);\n    });\n\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CommonserviceService } from '../commonservice.service';\nimport { renderFlagCheckIfStmt } from '@angular/compiler/src/render3/view/template';\n\n@Component({\n  selector: 'app-country-list',\n  templateUrl: './country-list.component.html',\n  styleUrls: ['./country-list.component.css']\n})\nexport class CountryListComponent implements OnInit {\n\n  constructor(public service: CommonserviceService) { }\n\n  country;\n  totalConfirmed;\n\n  /**\n   * CSS Properties\n   */\n  container= 'container';\n  countInfo= 'countInfo';\n  scroll = 'scroll';\n  \n /**\n  * Enable and Disable the Darkmode\n  */\n  @Input()\n  darkMode\n\n  ngOnInit(): void {\n    console.log(\"contry list\");\n    this.service.staticsReport.subscribe(data => {\n      console.log(\"inside contry list\");\n      console.log(data);\n      this.country = \n      Object.values(data['Countries']).sort((a,b) => (a['TotalConfirmed'] < b['TotalConfirmed']) ? 1 : -1);\n      this.totalConfirmed = data['Global'].TotalConfirmed;\n    })\n  }\n\n}\n","<div [ngClass]=\"service.toggleNightMode(container, darkMode)\">\n  <div [ngClass]=\"service.toggleNightMode(countInfo, darkMode)\">\n    <tr>Total Confirmed </tr>\n    <tr><b>{{totalConfirmed}}</b></tr>\n</div>\n<div [ngClass]=\"service.toggleNightMode(scroll, darkMode)\">\n        <li *ngFor=\"let hero of country\">\n          <div class=\"row\">\n          <div class=\"col-md-8\">\n            {{ hero.Country }}  \n          </div>\n          <div class=\"col-md-4\">\n            <b>{{ hero.TotalConfirmed}}</b>\n          </div>\n        </div>\n        </li>\n</div>\n</div>\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { CommonserviceService } from '../commonservice.service';\nimport { HostListener } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dash-board',\n  templateUrl: './dash-board.component.html',\n  styleUrls: ['./dash-board.component.css']\n})\nexport class DashBoardComponent implements OnInit {\n\n  constructor(private cdRef: ChangeDetectorRef, \n            public service: CommonserviceService,\n            public route: Router) { }\n\n  padding_5: 'padding-5';\n  ngOnInit(): void {\n  }\n  body= 'body';\n  col_sm_4='col-sm-4';\n  deathContainer = 'deathContainer';\n  recoverdContainer = 'recoverdContainer';\n  lineChartContainer= 'lineChartContainer';\n  darkMode = false;\n  toggle() {\n      this.darkMode = !this.darkMode;\n  }\n\n    getLable() {\n      if(!this.darkMode) {\n        return 'body-light';\n      } else {\n        return 'body-dark';\n      }\n    }\n     \n  }\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\">\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\"></script>\n</head>\n<body [ngClass]= \"service.toggleNightMode(body, darkMode)\">\n    <div class=\"fixed-header\">\n        <div class=\"container\">\n            <nav>\n                <div class=\"custom-control custom-switch\">\n                    <input type=\"checkbox\" class=\"custom-control-input\" (click)=\"toggle()\" id=\"customSwitches\">\n                    <label class=\"custom-control-label\" for=\"customSwitches\">Night Mode</label>\n                  </div>\n            </nav>\n        </div>\n    </div>\n    <div class=\"dashboard\">\n        <div class=\"row\">\n            <div class=\"col-sm-3 padding-0\">\n                <app-country-list [darkMode]=\"darkMode\"></app-country-list>\n            </div>\n            <div class=\"col-sm-5 padding-0\">\n                <app-mapview [darkMode]=\"darkMode\"></app-mapview> \n            </div>\n            <div class=\"col-sm-4\" [ngClass]= \"service.toggleNightMode(lineChartContainer, darkMode)\">\n                <div class=\"row\">\n                    <div  class=\"col-md-6\" [ngClass]= \"service.toggleNightMode(deathContainer, darkMode)\">\n                       <app-deathcount [darkMode]=\"darkMode\"></app-deathcount>\n                    </div>\n                    <div class=\"col-md-6\" [ngClass]= \"service.toggleNightMode(recoverdContainer, darkMode)\">\n                        <app-recovercount [darkMode]=\"darkMode\"></app-recovercount>\n                    </div>\n                </div>\n                <div style=\"background-color: whitesmoke;\">\n                    <app-line-chart [darkMode]=\"darkMode\"></app-line-chart>\n                </div>\n            </div>\n          </div>\n    </div>    \n     <div class=\"fixed-footer\">\n        <div class=\"container\"></div>        \n    </div> \n</body>\n</html>","import { Component, OnInit, Input } from '@angular/core';\nimport { CommonserviceService } from '../commonservice.service';\n\n@Component({\n  selector: 'app-deathcount',\n  templateUrl: './deathcount.component.html',\n  styleUrls: ['./deathcount.component.css']\n})\nexport class DeathcountComponent implements OnInit {\n\n  constructor(public service: CommonserviceService) { }\n\n  country;\n  TotalDeath;\n\n\n  /**\n   * CSS Properties\n   */\n  container= 'container';\n  countInfo= 'countInfo';\n  scroll = 'scroll';\n\n  @Input()\n  darkMode\n  \n  ngOnInit(): void {\n    this.service.staticsReport.subscribe(data => {\n      this.country = Object.values(data['Countries']).sort((a,b) => (a['TotalDeaths'] < b['TotalDeaths']) ? 1 : -1);\n      this.TotalDeath = data['Global'].TotalDeaths;\n    });\n  }\n\n}\n","<div [ngClass]=\"service.toggleNightMode(container, darkMode)\">\n<div [ngClass]=\"service.toggleNightMode(countInfo, darkMode)\">\n    <tr id=\"title\">Total Deaths</tr>\n    <tr><b>{{TotalDeath}}</b></tr> \n</div>\n<div [ngClass]=\"service.toggleNightMode(scroll, darkMode)\">\n        <li *ngFor=\"let hero of country\">\n            <div class=\"row\">\n                <div class=\"col-md-7\">\n                    {{ hero.Country }}\n                </div>\n                <div class=\"col-md-5\">\n                  <b>{{ hero.TotalDeaths}}</b>\n                </div>\n            </div>\n        </li>\n</div>\n</div>\n","import { Component, OnInit, ChangeDetectorRef, Input } from '@angular/core';\nimport { CommonserviceService } from '../commonservice.service';\nimport { reduce } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css']\n})\nexport class LineChartComponent implements OnInit {\n\n\n  @Input()\n  darkMode\n\n  /**\n   * CSS Properties\n   */\n  container= 'container';\n\n  title = 'Country based Corono Status';\n  type = 'LineChart';\n  \n  options_dark = {\n    \n    backgroundColor: \"#0c072e\", \n     hAxis: {\n      textStyle: {color: \"white\"}\n     },\n     vAxis:{\n        title: 'Peopel Count',\n        titleTextStyle: {\n          color: 'white'\n        },\n        textStyle: {color: \"white\"}\n     },\n     legend: {position: 'bottom', textStyle: {color: 'red', fontSize: 16}},\n  }\n  options = { \n    backgroundColor: \"white\", \n     vAxis:{\n        title: 'Peopel Count'\n     },\n     legend: {textStyle: {color: 'white', fontSize: 16}},\n  };\n  width = 400;\n  height = 300;\n  \n  constructor(private service: CommonserviceService, private cdf: ChangeDetectorRef) { }\n\n  \n  countryList;\n  countryInfo;\n  lineChartData = [];\n  StatusList = ['Active', 'Confirmed', 'Recovered'];\n  statusType = 'Active';\n  StatusReport = [];\n  ngOnInit(): void {\n    this.service.staticsReport.subscribe(data => {\n      this.countryInfo = Object.values(data['Countries']);\n      this.countryList = Object.values(data['Countries']).map(t => { return t['Country'] });\n    })\n    \n    this.service.lineChartReport.subscribe(data => {\n      this.lineChartData = [];\n      this.StatusReport = [];\n      Object.values(data).forEach((test, i) => {\n        let sampleArray = [];\n          if(this.lineChartData.length < 10 && this.lineChartData.find(t => t===test.Date) === undefined) {\n              sampleArray.push(test.Date);\n              sampleArray.push(data[i][this.statusType]);\n              this.lineChartData[i] = sampleArray;\n              this.StatusReport.push(test);\n          }\n      })\n      console.log(this.lineChartData)\n    })\n}\nchangeCity(e) {\n  let countrySlug = Object.values(this.countryInfo ).filter(c => { \n    if(c['Country']=== e.target.value) { \n      return c['Slug'] }});\n  this.service.getWorldWideInfo(countrySlug[0]['Slug']);\n}\n\nChangeStatus(e) {\n    this.lineChartData = [];\n    this.statusType = e.target.value;\n    this.StatusReport.forEach((test, i) => {\n       let sampleArray = [];\n       sampleArray.push(test.Date);\n       sampleArray.push(this.StatusReport[i][this.statusType]);\n       this.lineChartData.push(sampleArray);\n    })\n}\n\n}\n","<div [ngClass]=\"{'container': !darkMode,\n'container-dark': darkMode}\">\n<div class=\"row\">\n    <div class=\"col-md-6\">\n        <div class=\"dropdown\">\n            <select class=\"custom-select\" (change)=\"changeCity($event)\" >\n                <option *ngFor=\"let country of countryList\" [ngValue]=\"country\">{{country}}</option>\n             </select>\n          </div>\n    </div>\n    <div class=\"col-md-6\">\n        <div class=\"dropdown\">\n            <select class=\"custom-select\" (change)=\"ChangeStatus($event)\" >\n                <option *ngFor=\"let status of StatusList\" [ngValue]=\"status\">{{status}}</option>\n             </select>\n          </div>\n    </div>\n</div>\n<div class=\"lineGraph\" *ngIf=\"!darkMode\">\n<google-chart \n   [title]=\"title\"\n   [type]=\"type\"\n   [data]=\"lineChartData\"\n   [options]=\"options\"\n   [columnNames]=\"columnNames\"\n   [width]=500\n   [height]=220>\n</google-chart>\n</div>\n<div class=\"container\" *ngIf=\"darkMode\">\n    <google-chart \n       [title]=\"title\"\n       [type]=\"type\"\n       [data]=\"lineChartData\"\n       [options]=\"options_dark\"\n       [columnNames]=\"columnNames\"\n       [width]=500\n       [height]=220>\n    </google-chart>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CommonserviceService } from '../commonservice.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public service: CommonserviceService, private route: Router){\n    \n  }\n  username: String = \"\";\n  password: String = \"\";\n  flag: Boolean = false;\n  loginFailed = false;\n  \n\n\n  ngOnInit() {\n\n  }\n  \n  onSubmit(name,password) {\n      if(this.service.checkLogin(this.username, this.password) && !this.service.loggedIn) {\n        this.service.loggedIn = true;\n        this.route.navigate(['/dashboard']);\n      } else {\n        this.loginFailed = true;\n        this.route.navigate(['']);\n      }    \n    \n  }\n}\n","<div class=\"container\" *ngIf=\"!service.loggedIn\">\n    <h2>Login to your account</h2>\n    <div id=\"username\"> \n      <span>Username: </span>\n      <input type=\"text\"  [(ngModel)]=\"username\">\n    </div>\n    <div id=\"password\">\n      <span>Password: </span>\n      <input type=\"password\" [(ngModel)]=\"password\">\n    </div>\n    <div class=\"loginFailed\">\n      <span *ngIf=\"loginFailed\"> Invalid Credential </span>\n    </div>\n    <button (click)=\"onSubmit(username, password)\">Submit</button>\n  </div>\n\n  ","import { Component, OnInit, Input, ChangeDetectorRef } from '@angular/core';\nimport { CommonserviceService } from '../commonservice.service';\n\n@Component({\n  selector: 'app-mapview',\n  templateUrl: './mapview.component.html',\n  styleUrls: ['./mapview.component.css']\n})\nexport class MapviewComponent implements OnInit {\n\n  constructor(private service: CommonserviceService, private changeDetector: ChangeDetectorRef) { }\n  title = '';\n  type = 'GeoChart';\n\n  public countryList;\n  public statusReport = [];\n  public allOverStatus = [];\n  mapBackGround;\n\n  @Input()\n  darkMode\n\n columnNames = [\"Latitude\",\"Longitude\", \"Name\"];\n options_dark = {\n  backgroundColor:  \"#05021c\" ,\n  showTip: true,\n  colors:\"red\",\n  legend: {position: 'bottom', textStyle: {color: 'blue', fontSize: 16}},\n};\n  options = {   \n      backgroundColor:'white',\n      showTip: true,\n      colors:\"red\",\n      legend: {position: 'bottom', textStyle: {color: 'blue', fontSize: 16}},\n  };\n  width = 500;\n  height = 500;\n\n  ngOnInit(): void {\n    if(!this.darkMode) {\n      this.options.backgroundColor = 'white';\n    } else {\n      this.options.backgroundColor = '#05021c';\n    }\n    this.changeDetector.detectChanges();\n    this.service.staticsReport.subscribe(data => {\n      this.countryList = Object.values(data['Countries']).map(t => { return t['Slug'] });\n      this.countryList = this.countryList.slice(0,9);\n        \n     this.countryList.forEach(element => {\n          this.service.getMapvalue(element).subscribe((data) => {\n                let sampleArray = [];\n                  sampleArray.push(parseInt(data[0].Lat))\n                  sampleArray.push(parseInt(data[0].Lon))\n                  sampleArray.push(parseInt(data[0].Confirmed))\n                  this.statusReport.push(sampleArray)\n                  this.allOverStatus.push(data[0]);\n          })\n      });\n    })\n  }\n\n\n  ChangeStatus(status) {\n    this.statusReport = [];\n      this.allOverStatus.forEach((element, i) => {\n        let sampleArray = [];\n        sampleArray.push(parseInt(element.Lat))\n        sampleArray.push(parseInt(element.Lon))\n        sampleArray.push(parseInt(this.allOverStatus[i][status]))\n        this.statusReport.push(sampleArray)\n      })\n  }\n}\n","<div class=\"container\" id=\"outer\">\n  <div class=\"row\">\n    <div class=\"col-sm\">\n      <div class=\"inner \"><button type=\"submit\" class=\"msgBtn\" (click)=\"ChangeStatus('Confirmed')\" >TOTAL</button></div>\n    </div>\n    <div class=\"col-sm\">\n      <div class=\"inner\"><button type=\"submit\" class=\"msgBtn2\" (click)=\"ChangeStatus('Recovered')\">RECOVERED</button></div>\n    </div>\n    <div class=\"col-sm\">\n      <div class=\"inner\"><button class=\"msgBtn3\" (click)=\"ChangeStatus('Deaths')\">DEATHS</button></div>\n    </div>\n  </div>\n</div>\n<div class=\"mapView\"  *ngIf=\"!darkMode\">\n<google-chart  #chart [title]=\"title\" [type]=\"type\" [data]=\"statusReport\" \n[columns]=\"columnNames\" [options]=\"options\">\n</google-chart>\n</div>\n<div class=\"mapView\" *ngIf= \"darkMode\">\n  <google-chart  #chart [title]=\"title\" [type]=\"type\" [data]=\"statusReport\" \n  [columns]=\"columnNames\" [options]=\"options_dark\">\n  </google-chart>\n  </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { CommonserviceService } from '../commonservice.service';\n\n@Component({\n  selector: 'app-recovercount',\n  templateUrl: './recovercount.component.html',\n  styleUrls: ['./recovercount.component.css']\n})\nexport class RecovercountComponent implements OnInit {\n\n  constructor(public service: CommonserviceService) { }\n\n  @Input()\n  darkMode\n\n  /**\n   * CSS Properties\n   */\n  container= 'container';\n  countInfo= 'countInfo';\n  scroll = 'scroll';\n\n  country;\n  TotalRecoverd;\n  ngOnInit(): void {\n    this.service.staticsReport.subscribe(data => {\n      this.country = Object.values(data['Countries']).sort((a,b) => (a['TotalRecovered'] < b['TotalRecovered']) ? 1 : -1);\n      this.TotalRecoverd = data['Global'].TotalRecovered;\n    });\n  }\n\n}\n","<div [ngClass]=\"service.toggleNightMode(container, darkMode)\">\n<div [ngClass]=\"service.toggleNightMode(countInfo, darkMode)\">\n    <tr id=\"title\">Total Recovered</tr>\n    <tr><b>{{TotalRecoverd}}</b></tr>\n</div>\n<div [ngClass]=\"service.toggleNightMode(scroll, darkMode)\">\n        <li *ngFor=\"let hero of country\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    {{ hero.Country }}\n                </div>\n                <div class=\"col-md-6\">\n                  <b>{{ hero.TotalRecovered}}</b>\n                </div>\n            </div>          \n        </li>\n</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}